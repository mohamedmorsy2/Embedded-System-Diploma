#include <avr/io.h>
#include <util/delay.h>
#include<avr/interrupt.h>

unsigned char  num[6]={0};
ISR(TIMER1_COMPA_vect)
{
	num[0]++;
}
ISR (INT0_vect)
{
	unsigned char i;
for(i=0 ; i<6 ; i++)
{
num[i]=0;
}
}
////////////////////////////////////////////////////////////
void TIMER1_intil(void)
{

	TCCR1B |= (1<<WGM12) | (1<<CS10)| (1<<CS12); // ctc && clk/1024
	TCCR1A |= (1<<FOC1A) |  (1<<FOC1B) ;  // for non_pwm
	TCNT1 = 0;  //initial value
	OCR1A = 976;
	TIMSK |= (1<<OCIE1A);  // enable compA
	SREG|=(1<<7); //i_bit

}

void INT0_intil(void)
{

	DDRD &=~(1<<PD2);  // set as input
	GICR |=(1<<INT0);  // enable INT0
	MCUCR |= (1<<ISC01); //The falling edge of INT0
	SREG|=(1<<7); // i_bit

}
int main(void)
{
	TIMER1_intil();
	INT0_intil();

	DDRA |=(1<<0) |(1<<1)|(1<<2) |(1<<3) |(1<<4) |(1<<5) |(1<<6);  //enable 7_segment
	PORTA &= ~(1<<0) &~ (1<<1) &~ (1<<2) &~ (1<<3) &~ (1<<4) &~ (1<<5);  // clear bits

	DDRC |=(1<<0) |(1<<1)|(1<<2)|(1<<3);  // bits for decoder
	PORTC &= ~(1<<0) &~ (1<<1) &~ (1<<2) &~ (1<<3); // clear bits

	while(1)
	{


		if(num[0] > 9)
		{
			num[1]++;
			num[0]=0;
		}
		if(num[1]>5)
		{
			num[1]=0;
			num[2]++;
		}
		if(num[2]>9)
		{
			num[2]=0;
			num[3]++;
		}
		if(num[3]>5)
			{
				num[3]=0;
				num[4]++;
			}
			if(num[4]>9)
			{
				num[4]=0;
				num[5]++;
			}





		////////display//////////////////
			PORTC= (PORTC & 0xF0)| ( num[0] & 0x0F);
					PORTA |= (1<<PA0) ;
					_delay_us(1);
					PORTA &=~(1<<PA0);
					PORTC= (PORTC & 0xF0)| ( num[1] & 0x0F);
					PORTA |= (1<<PA1) ;
					_delay_us(1);
					PORTA &=~(1<<PA1);
					PORTC= (PORTC & 0xF0)| ( num[2] & 0x0F);
					PORTA |= (1<<PA2) ;
					_delay_us(1);
					PORTA &=~(1<<PA2);
					PORTC= (PORTC & 0xF0)| ( num[3] & 0x0F);
					PORTA |= (1<<PA3) ;
					_delay_us(1);
					PORTA &=~(1<<PA3);
					PORTC= (PORTC & 0xF0)| ( num[4] & 0x0F);
					PORTA |= (1<<PA4) ;
					_delay_us(1);
					PORTA &=~(1<<PA4);
					PORTC= (PORTC & 0xF0)| ( num[5] & 0x0F);
					PORTA |= (1<<PA5) ;
					_delay_us(1);
					PORTA &=~(1<<PA5);




	}


}
